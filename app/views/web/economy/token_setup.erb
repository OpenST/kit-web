<%

    wallet_association =  @presenter_obj.sign_messages.wallet_association


    chain_id = GlobalConstant::Chain.origin_chain_id

    addresses_api = GlobalConstant::RoutesMap.getApis()[:api_addresses]
    deployment_api = GlobalConstant::RoutesMap.getApis()[:api_deploy]
    address_generation_api = GlobalConstant::RoutesMap.getApis()[:api_token_setup_address_generation]

    deploy_route = GlobalConstant::RoutesMap.getRoutes()[:token_deploy]

    conversion_factor = @presenter_obj.client_token_conversion_factor || 1
    # bt_to_sc_input_name = "conversion_factor"
    bt_to_sc_min = GlobalConstant::ClientToken.bt_to_sc_min
    bt_to_sc_step = GlobalConstant::ClientToken.bt_to_sc_step
    bt_to_sc_max = GlobalConstant::ClientToken.bt_to_sc_max

    sc_to_bt_id = "sc_to_bt_id"

    # stake_currency_symbol would be set only after token has been created on BE
    # TODO: FE to use @presenter_obj.all_stake_currencies to show drop down or to pick a default and remove OST hardcoding below

    stake_currency_symbol = 'OST'
    if @presenter_obj.client_token.present? && @presenter_obj.client_token.stake_currency_id.present?
      stake_currency_symbol = @presenter_obj.client_token.stake_currency_symbol
    end

    #TODO: Base currency should be changed dynamically by FE.
    sc_to_fiat =  @presenter_obj.price_points.stake_currency_to_fiat_conversion_factor(stake_currency_symbol, "USD")

    is_mainnet = GlobalConstant::Base.main_sub_environment?
    is_metamask_whitelisted_browser = browser_supported_by_metamask?

    data_config = {
        token: @presenter_obj.client_token.data,
        price_points: @presenter_obj.price_points.data,
        stake_currencies: @presenter_obj.all_stake_currencies.data
    }

%>


<% if is_mainnet && !is_metamask_whitelisted_browser %>
  <div class="planner-container text-center mt-6">
    <%= render :partial => "web/economy/token/browser_not_supported"%>
  </div>
<%else%>

  <form data-ost-formhelper id="economy-planner" action="<%=GlobalConstant::RoutesMap.getApis()[:api_token]%>" method="POST">
    <div class="planner-container text-center mt-6">

      <h3>Let's Design The Token To Launch Your Economy</h3>
      <div class="container">

        <%= render partial: '/web/economy/token-setup/token_details' %>

        <%= render partial: '/web/economy/token-setup/staking_options',
            :locals => {
            :stake_currency_symbol => stake_currency_symbol
        } %>

        <%= render partial: '/web/economy/token-setup/advance_options',
             :locals => {
             :is_mainnet => is_mainnet,
             :stake_currency_symbol => stake_currency_symbol,
             :bt_to_sc_min => bt_to_sc_min,
             :bt_to_sc_max => bt_to_sc_max,
             :bt_to_sc_step => bt_to_sc_step,
             :sc_to_bt_id => sc_to_bt_id,
             :conversion_factor => conversion_factor,
             :sc_to_fiat => sc_to_fiat
        } %>

      </div>

      <footer>
        <div class="row sticky-footer">
          <div class="container">
            <div class="row">
              <button type="submit" class="btn btn-steps-nav bg-yellow pt-3 pb-3 ml-auto"
                       data-submiting="Proceeding..." id="setup-token-btn" title="Proceed">Proceed &gt;</button>
            </div>
          </div>
        </div>
        <div class="pseudo-footer"></div>
      </footer>
    </div>
  </form>

  <% content_for :popups do %>
    <%= render partial: 'shared/web/modals/token_setup_admin_error'%>
  <% end %>

  <% content_for :cover_elements do %>
    <div id="token-setup-option-cover" class="cover-element">
      <div class="container">
        <%= render :partial => "web/economy/token/token_setup_options" %>
      </div>
    </div>
  <%end%>

  <% content_for :end_js do %>
    <script type="text/javascript">
    //  function awse(val){return val}  //Not sure why it was required
        $( function () {
          var dataConfig = JSON.parse('<%= raw data_config.to_json %>');
            ost.tokenSetup.init({

                walletAssociation : "<%= wallet_association%>",
                chainId : '<%= chain_id %>',
                isMainnet: <%= is_mainnet%>,

                addressesEndPoint: '<%= addresses_api%>',
                deploymentEndpoint : '<%=deployment_api %>' ,
                addressGenerationApi: '<%= address_generation_api%>',
                deployRoute : '<%= deploy_route %>',
                scToBtId : "<%= sc_to_bt_id %>",
                stakeCurrencySymbol : "<%= stake_currency_symbol%>",
                dataConfig : dataConfig,
                conversion_factor : <%= conversion_factor %>
            });
        });
    </script>
  <% end %>


<%end%>
